//RadixSort
void CountingSort(int A[],int d){
    int n = (sizeof(A)/sizeof(*A));
    int a[n];
    int count [10];
    for (int i = 0; i < 10; ++i) count[i] = 0;
    for (int i=0; i<n; i++) count[(A[i]/d)%10]++;
    for (int i=0;i<10; i++) count[i] += count[i-1];
    for (int i=n-1; i>=0; i--){
        a[count[(A[i]/d)%10]-1] = A[i];
        count[(A[i]/d)%10]--;
    }
    for (int i=0; i<n; i++){
        A[i] = a[i];
    }
}

void RadixSort(int A[]){
    int n = (sizeof(A)/sizeof(*A));
    int max = A[0];
    for (int i = 0; i<n; i++) 
        if (A[i] > max) max = A[i];
    for (int d = 1; max/d> 0; d*=10) CountingSort(A,d);
}